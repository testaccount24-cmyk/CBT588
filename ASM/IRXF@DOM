//jobname JOB (account),userid,CLASS=S,MSGCLASS=Y,REGION=4M
//*
//* First modify JOB card and data set names to your environment
//* Assemble and Link program IRX@MGCR
//*
//ASMH EXEC PGM=ASMA90,REGION=4M,
// PARM='OBJECT,NODECK,NOXREF,BATCH'
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//         DD DISP=SHR,DSN=SYS3.UTILITY.MACLIB.TEST      <== hlq.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//SYSIN    DD *
*---------------------------------------------------------------------
     TITLE 'IRXF@DOM REXX function L_DOM'
*---------------------------------------------------------------------
* History of Changes (last comes first):
*
* 02-20-2003 SVM Created using CTB file 386 IRXF@DOM (L_DOM)
*                    Changes:
*                    - ignore empty parm, always return rc=0
*.....................................................................
*
* FUNCTION:     Delete message from operator console
*                  identified by parm=msgid
*
* Sample use:   msgid = L_WTO(message,'b')
*               ...
*               call L_DOM(msgid) /* remove message */
*
* PARAMETERS:   msgid - returned by L_WTO function
*
* OUTPUT:       R15 = 0
*               '1' - normal execution response
*               '0' - no parm or rc<>0 from DOM
*
* ATTRIBUTES:   REENTRANT, AMODE=31, RMODE=ANY
*--------------------------------------------------------------------
IRXF@DOM BEGIN
         REGS
         BAKR  R14,0
         LR    R12,R15
         LR    R02,R01
         USING IRXF@DOM,R12
         USING EFPL,R02
         L     R03,EFPLARG
         L     R04,EFPLEVAL
         USING ARGTABLE_ENTRY,R03
         L     R04,0(R04)
         USING EVALBLOCK,R04
         MVI   EVALBLOCK_EVDATA,C'1'   default: return '1'
         LA    R09,1
         ST    R09,EVALBLOCK_EVLEN
*--------------------------------------------------------------------
* Get parameter = message ID
*--------------------------------------------------------------------
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    FINNOK
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         C     R06,=F'4'
         BNE   FINNOK
         L     R06,0(R05)
*--------------------------------------------------------------------
* Remove message by message ID
*--------------------------------------------------------------------
         DOM   MSG=(R06)
         LTR   R15,R15
         BZ    EXIT
FINNOK   MVI   EVALBLOCK_EVDATA,C'0'
*--------------------------------------------------------------------
* EXIT
*--------------------------------------------------------------------
EXIT     SR    R15,R15
         PR
         LTORG
*--------------------------------------------------------------------
* MAPS
*--------------------------------------------------------------------
         IRXEFPL
         IRXARGTB
         IRXEVALB
         END   IRXF@DOM
//*
//LKED    EXEC PGM=HEWLKED,PARM='RENT,CALL,MAP,AC=1,RMOD=ANY,AMOD=31',
//        COND=(8,LE)
//SYSLMOD  DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST(IRXF@DOM) <=*.LOAD
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//*
//* test changes, if any:
//*O      EXEC PGM=IKJEFT1B,COND=(8,LE),
//*       PARM='%PW'
//GO      EXEC PGM=IRXJCL,COND=(8,LE),
//        PARM='PW'
//SYSEXEC  DD DISP=SHR,DSN=SYS3.UTILITY.EXEC.SHARE         <== hlq.EXEC
//STEPLIB  DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST       <== hlq.LOAD
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSUDUMP DD SYSOUT=*
//TEMPL    DD *
 x = L_WTO('Red Test message-ignore','A','S')
 Say 'Red Message ID from L_WTO =' C2X(x)
 call FWAIT('5s')
 x = IRXF@DOM(x)
 Say 'RC from L_DOM =' x
 x = L_WTO('White Test message-ignore','B')
 Say 'White Message ID from L_WTO =' C2X(x)
 call FWAIT('5s')
 x = IRXF@DOM(x)
 Say 'RC from L_DOM =' x
 x = IRXF@DOM('')
 Say 'Test L_DOM with empty parm:'
 Say 'RC from L_DOM =' x
 EXIT
//
