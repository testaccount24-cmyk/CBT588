//jobname JOB (account),userid,CLASS=S,MSGCLASS=Y,REGION=4M
//*
//* First modify JOB card and data set names to your environment
//* Assemble and Link program/module
//*
//ASMH EXEC PGM=ASMA90,REGION=4M,
// PARM='RENT,OBJECT,NODECK,NOXREF,BATCH'
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//         DD DISP=SHR,DSN=SYS3.UTILITY.MACLIB.TEST      <== hlq.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//SYSIN    DD *
*---------------------------------------------------------------------
     TITLE 'IRXF@SRT REXX function L_SRT'
*---------------------------------------------------------------------
* History of Changes (last comes first):
*
* 03-07-2003 SVM Created using CTB file 386 IRXF@SRT (L_SORT)
*                    Changes:
*                    - made reentrant, added comments
*.....................................................................
*
* FUNCTION:     Sort data records in STACK,
*               Returns sorted records to the STACK
*
* Sample use:   If L_SORT("SORT FIELDS=(5,4,CH,A)","M")
*                    ...
*                    Notes:
*                    1) start of the field to sort must be
*                       set to n+4, i.e. col #1 is FIELDS=(5,...
*                    2) 'M' means put SORT messages to SYSOUT,
*                       other value or omitted - no SYSOUT produced.
*
* OUTPUT:       If Error - "Incorrect call to procedure" (R15>0)
*                    - no or empty parm
*                    - RC>0 from SORT (bad parm)
*               If OK,
*                    result = '1' normal execution response
*
* Attributes:
*               Reus, reentrant, AMODE=31,RMODE=ANY
*--------------------------------------------------------------------
WRK      DSECT
         DS    18F
IRXEP    DS    F                       Addr of IRXSTK
*
* Parm for IRXSTK:
STKFUNC  DS    CL8
STKDAT   DS    F
STKLEN   DS    F
STKRC    DS    F
STKENV   DS    F                       Addr of REXX ENV block
STKRCE   DS    F
IRXSTKP  DS    0F
P1       DC    A(STKFUNC)
P2       DC    A(STKDAT)
P3       DC    A(STKLEN)
P4       DC    A(STKRC)
P5       DC    A(STKENV)
P6       DC    A(STKRCE+X'80000000')
*
* SORT 31-bit extended parm list: R1-> SORTPL1 (p.6-13)
SORTPL1  DC    A(SORTCTL)
SORTPL2  DC    A(SORTE15+X'80000000')  31 bit amode
SORTPL3  DC    A(SORTE35+X'80000000')  31 bit amode
SORTPL4  DS    A                       passed user const - ADDR(WRK)
SORTPL5  DC    F'-1'
SORTCTL  DS    0H                      31-bit SORT parm list
         DC    AL2(SORTCTE-SORTCT1)
SORTCT1  DC    C'                                           '
SORTCT2  DC    C' RECORD TYPE=V,LENGTH=4096 '
SORTCTU  DS    CL256                   SORT FIELDS+...
SORTCTE  EQU   *
*
BUFF     DS    CL4100
WRKL     EQU   (*-WRK+7)/8*8           WORK AREA LENGTH, words
*---------------------------------------------------------------------
IRXF@SRT BEGIN A=31
WRK      WORK  LV=WRKL
         B     START
FIN      EQU   *
         FIN
*--------------------------------------------------------------------
* ESTABLISH REXX environment
*---------------------------------------------------------------------
START    LR    R02,R01
         ST    R00,STKENV
         USING EFPL,R02
         L     R03,EFPLARG
         L     R04,EFPLEVAL
         USING ARGTABLE_ENTRY,R03
         L     R04,0(R04)
         USING EVALBLOCK,R04
*---------------------------------------------------------------------
* Get parm 1 - SORT FIELDS=statement
*---------------------------------------------------------------------
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05                 check addr
         BM    FINNOK                  error - no parm
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK                  error - empty parm
         MVI   SORTCTU,C' '
         MVC   SORTCTU+1(255),SORTCTU  clear
         C     R06,F256                check length
         BNH   HMOV
         LA    R06,256                 truncate Statement to 256 char
HMOV     BCTR  R06,R00
         MVI   SORTCTU,C' '
         MVC   SORTCTU+1(L'SORTCTU-1),SORTCTU
         EX    R06,MOVCTU
*---------------------------------------------------------------------
* Get parm 2 - 'M'= MSGPRT, other - MSGPRT=NONE
*---------------------------------------------------------------------
         LA    R03,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05                 no 2nd parm - set default
         BM    NMSG
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    NMSG                    no 2nd parm - set default
         CLI   0(R05),C'M'
         BE    SMSG
NMSG     MVC   SORTCT1,SORTCTN         Do not produce SORT msgs
         B     HSORT
SMSG     MVC   SORTCT1,SORTCTM         Set produce SORT messages
         B     HSORT
*---------------------------------------------------------------------
*  Link to SORT
*---------------------------------------------------------------------
HSORT    EQU   *
*     WTO '--- Before sorting:',Routcde=11
* Create IRXSTK parm list:
         LA    R1,STKFUNC
         ST    R1,P1
         LA    R1,STKDAT
         ST    R1,P2
         LA    R1,STKLEN
         ST    R1,P3
         LA    R1,STKRC
         ST    R1,P4
         LA    R1,STKENV
         ST    R1,P5
         LA    R1,STKRCE
         ST    R1,P6
         OI    P6,X'80'
*
         LOAD  EP=IRXSTK
         ST    R00,IRXEP               entry addr
         MVC   STKFUNC,KPULL
* Create 31-bit SORT parameter list:
         LA    R1,SORTCTL
         ST    R1,SORTPL1              A(SORTCTL)
         L     R1,=V(SORTE15)
         ST    R1,SORTPL2              A(SORTE15+X'80000000')
         OI    SORTPL2,X'80'
         L     R1,=V(SORTE35)
         ST    R1,SORTPL3              A(SORTE35+X'80000000')
         OI    SORTPL3,X'80'
         ST    R13,SORTPL4             passed user const - A(WRK)
         L     R1,=F'-1'
         ST    R1,SORTPL5              F'-1' indicate end of parm
*
         LA    R1,SORTCTE-SORTCT1      length of data
         STH   R1,SORTCTL              store length
         MVC   SORTCT1(L'SORTCT1),#BLANKS
         MVC   SORTCT2(L'SORTCT2),#SORTCT2  "RECORD stmt"
         ST    R13,SORTPL4
* Link to SORT routine:
         LA    R01,SORTPL1
         LINK  EP=SORT
         LTR   R15,R15
         BNZ   FINNOK                  error - SORT.RC>0
* Return '1' as a normal end indicator:
         LA    R08,1
         ST    R08,EVALBLOCK_EVLEN
         MVI   EVALBLOCK_EVDATA,C'1'
*---------------------------------------------------------------------
* EXIT
*---------------------------------------------------------------------
EXIT     SR    R15,R15
         B     FIN
FINNOK   LA    R15,16
         B     FIN
*---------------------------------------------------------------------
* Constants
*---------------------------------------------------------------------
F256     DC    F'256'
MOVCTU   MVC   SORTCTU(0),0(R05)
KPULL    DC    CL8'PULL    '
MOVDTA   MVC   0(0,R15),0(R14)
SORTCTM  DC    C' OPTION HIPRMAX=0,DYNALLOC=OFF             '
SORTCTN  DC    C' OPTION HIPRMAX=0,DYNALLOC=OFF,MSGPRT=NONE '
#BLANKS  DC    80C' '
#SORTCT2 DC    C' RECORD TYPE=V,LENGTH=4096 '
*---------------------------------------------------------------------
* Sort Exit 15: get input record
*    user const comes at offset 4
*---------------------------------------------------------------------
SORTE15  CSECT
SORTE15  AMODE 31
SORTE15  RMODE ANY
         DROP  R13
         BAKR  R14,0
         LR    R11,R15
         USING SORTE15,R11             address itself
         USING SORPE15,R01             address parm
         L     R07,SORUEC              address WRK
         DROP  R01
         USING WRK,R07
         LA    R01,IRXSTKP
         L     R15,IRXEP
         BALR  R14,R15                 Call IRXSTK to get record
         LTR   R15,R15
         BNZ   NOMAS                   EOF
         L     R08,STKLEN
         C     R08,F4092
         BH    ERROR
         LA    R08,4(R08)
         STH   R08,BUFF
         XC    BUFF+2(2),BUFF+2
         LR    R01,R08
         LR    R15,R08
         LA    R00,BUFF+4
         L     R14,STKDAT
         MVCL  R00,R14
*MSG15 EQU WTO15+8
*      MVC MSG15(13),BUFF+4
*WTO15 WTO   '1234567890123',ROUTCDE=11
         LA    R01,BUFF                Return buff with record
         LA    R15,12                  back to SORT
         PR
NOMAS    EQU   *
*     WTO '--- After  sorting:',Routcde=11
         LA    R15,8                   EOF
         MVC   STKFUNC,KQUEUE          Re-set for EXITE35
         PR
ERROR    LA    R15,16                  Terminate SORT
         PR
F4092    DC    F'4092'
KQUEUE   DC    CL8'QUEUE'
SORPE15  DSECT
SORADD   DS    F
SORUEC   DS    F
         DROP  R07,R11
*---------------------------------------------------------------------
* Sort exit 35 - process output record
*---------------------------------------------------------------------
SORTE35  CSECT
SORTE35  AMODE 31
SORTE35  RMODE ANY
         BAKR  R14,0
         LR    R11,R15
         USING SORTE35,R11
         USING SORPE35,R01
         L     R07,SORUEC2
         L     R08,SORADIN
         DROP  R01
         LTR   R08,R08
         BZ    NMS                     last record
         USING WRK,R07
         LH    R01,0(R08)
         S     R01,FIJO4
         ST    R01,STKLEN
         LA    R01,4(R08)
         ST    R01,STKDAT
*MSG   EQU WTO+8
*      MVC MSG(13),0(R01)
*WTO   WTO   '1234567890123',ROUTCDE=11
         LA    R01,IRXSTKP
         L     R15,IRXEP
         BALR  R14,R15                 Call IRXSTK to queue record
         LTR   R15,R15
         BNZ   ERRORS                  Error while queueing record
         LA    R15,4                   flag "delete" this record
         PR                            for SORT
NMS      LA    R15,8                   disconnect E35
         PR
ERRORS   LA    R15,16                  terminate sort
         PR
FIJO4    DC    F'4'
SORPE35  DSECT
SORADIN  DS    F                       addr of record from phase 3
SORADOU  DS    F                       addr of record in output area
SORUEC2  DS    F                       user address constant
         DROP  R07,R11
*---------------------------------------------------------------------
* MAPS
*---------------------------------------------------------------------
         REGS
D        DSECT
         IRXEFPL
         IRXARGTB
         IRXEVALB
         END   IRXF@SRT
//*
//LKED    EXEC PGM=HEWLKED,
//        PARM='RENT,CALL,MAP,AC=1,RMOD=ANY,AMOD=31',
//        COND=(8,LE)
//SYSLIB   DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST       <== hlq.LOAD
//SYSLMOD  DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST(IRXF@SRT) <=*.LOAD
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//*
//* test changes, if any:
//*O      EXEC PGM=IKJEFT1B,COND=(8,LE),
//*       PARM='%PW'
//GO      EXEC PGM=IRXJCL,COND=(8,LE),
//        PARM='PW'
//SYSEXEC  DD DISP=SHR,DSN=SYS3.UTILITY.EXEC.SHARE         <== hlq.EXEC
//STEPLIB  DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST       <== hlq.LOAD
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//ABNLIGNR DD DUMMY
//SYSUDUMP DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//TEMPL    DD *
 Say 'Function=L_SORT'
 l.0 = 5
 l.1 = '1958  ANDY   '
 l.2 = '1951  SERGEY '
 l.3 = '1984  NATASHA'
 l.4 = '1981  ANNA   '
 l.5 = '1980  LEYLA  '
 Do i = 1 To l.0
    QUEUE l.i
    Say i l.i
    End
 imax = "QUEUED"()
 Say 'Queued before sort:' imax
 Say 'Result from L_SORT =' IRXF@SRT("SORT FIELDS=(5,4,CH,A)","N")
 imax = "QUEUED"()
 Say 'Queued after  sort:' imax
 Do i = 1 To imax
    Parse PULL line
    Say i line
    End
 EXIT
