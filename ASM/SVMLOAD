//jobname JOB (account),userid,CLASS=S,MSGCLASS=Y,REGION=4M
//*
//* First modify JOB card and data set names to your environment
//* Assemble and Link program/module
//*
//         EXEC ASMACLG,PARM.C='LIST,RENT',
// COND.L=(8,LE),PARM.L='AMODE=31,RMODE=ANY,RENT',
// COND.G=(8,LE),PARM.G='SVM00000'              <== module name to load
//C.SYSLIB  DD DISP=SHR,DSN=SYS1.MACLIB
//          DD DISP=SHR,DSN=SYS1.MODGEN
//          DD DISP=SHR,DSN=SYS3.UTILITY.MACLIB.TEST     <== hlq.MACLIB
//C.SYSPRINT DD SYSOUT=*
//C.SYSIN DD *
*---------------------------------------------------------------------
      TITLE 'SVMLOAD program to find/load a module'
*---------------------------------------------------------------------
* History of Changes (last comes first):
*
* 04/30/03 SVM Created for IRXF@FWT fo locate SVM00000
*---------------------------------------------------------------------
* FUNCTION:
*              Either find module addr if already loaded, or
*              LOAD it and return address.
* INPUT:
*              R1->addr(PDATA)
*              PDATA  DS H (length)
*                     DS CLlength (module name)
*
* OUTPUT:
*              R15 = 0 - not found and not loaded
*              R15 = addr of entry point (normal end)
* ATTRIBUTES:
*              Reenrant, RMODE=ANY
*---------------------------------------------------------------------
SVMLOAD  BEGIN
WRK      WORK  LV=WRKLEN
         B     START
EXIT     FIN
* - Check parm:
START    L     R1,0(R1)                PARM
         LH    R15,0(R1)               length
         LTR   R15,R15
         BZ    EXIT                    No parm - return 0
         BCTR  R15,0                   length-1
         MVC   NAME,=CL8' '
         EX    R15,MVCNAME             copy to NAME
* - Search if module is already loaded:
         L     R1,CVTPTR               CVT address
         USING CVT,R1
         L     R1,CVTTCBP
         L     R2,PSATOLD-PSATNEW(R1)  My TCB
         DROP  R1
         USING TCB,R2
         L     R4,TCBLLS               LLE chain
         USING LLE,R4
         USING CDENTRY,R3
LOOP     LTR   R4,R4
         BZ    END
         L     R3,LLECDPT               CDE for this LLE
         CLC   CDNAME(8),NAME
         BE    FOUND
         L     R4,LLECHN                next LLE
         B     LOOP
* - Module not found - try to LOAD:
END      DS    0H
         LOAD EPLOC=NAME,ERRET=LOADERR
         ST    R0,ADDR
         B     RETURN
* - Module found - return address
FOUND    DS    0H
         MVC   ADDR(4),CDENTPT
RETURN   DS    0H
*       SAY 'SVM00000 addr=',ADDR,4
         L     R15,ADDR
         B     EXIT
* - If LOAD not successful:
LOADERR  SR    R15,R15
         B     EXIT
*-------------------
MVCNAME  MVC   NAME(0),2(R1)
         LTORG
WRK      DSECT
S        DS    18F
ADDR     DS    A
NAME     DS    CL8
WRKLEN   EQU   *-WRK
         YREGS
         CVT     DSECT=YES             CVT
         IKJTCB  DSECT=YES             TCB
         IHAPSA
*        IHARB
         IHACDE
         IHALLE
         END
//L.SYSLMOD DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST(SVMLOAD) <=*.LOAD
//*L.SYSLIB  DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST     <== hlq.LOAD
//G.STEPLIB DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST      <== hlq.LOAD
