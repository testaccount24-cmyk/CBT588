//jobname JOB (account),userid,CLASS=S,MSGCLASS=Y,REGION=4M
//*
//*  First modify JOB card and data set names to your environment
//*  Assemble and Link program/module
//*
//ASMH EXEC PGM=ASMA90,REGION=4M,
// PARM='RENT,OBJECT,NODECK,NOXREF,BATCH'
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DSN=SYS3.RACFCHK.INSTALL,DISP=SHR      <== RACF maclib
//         DD DISP=SHR,DSN=SYS3.UTILITY.MACLIB.TEST      <== hlq.MACLIB
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//SYSIN    DD *
*---------------------------------------------------------------------*
     TITLE 'SVM0010  Inqury Authorisation status for DSN and UserID'
*---------------------------------------------------------------------*
* History of Changes (last comes first):
*
* 02-27-2003 SVM Changed to std macros
* 01-04-2001 SVM Created
*.....................................................................*
*
* FUNCTION:
*               1) Executes RACROUTE REQUEST=AUTH macro to check
*                  the authorisation level for UserID and DSN.
*                     If PUSER - blank, do 1st party request.
*                     Else do 3-rd party request (to do later...)
*               2) Copy RACF return codes to a parameter data fields
*
* INPUT:
*               R1 -> Data structure (see PAR0010 macro).
*
* ATTRIBUTES:
*        REENTRANT, AMOD=31, RMOD=ANY
*---------------------------------------------------------------------*
SVM0010  BEGIN
WRK      WORK  LV=WRKLEN,LOC=RES
         B     START
EXIT     FIN
*
START    LR    R5,R1               ORIGINAL PARAMETER
         USING PARM,R5
         LA    R8,RACLAB           To
         LA    R10,RACLA1          From
         L     R9,RACLEN           Data length
         LR    R11,R9              Data length
         MVCL  R8,R10              Copy data to WORK
*
         LA    R7,PDSN             Point to Dsname
         LA    R4,PUSER            Point to Userid
         LA    R8,RACLAB           Point to PARAMETER LIST IN RACF
         USING SAFP,R8
         LA    R2,WRKD
         CLI   PUSER,C' '
         BE    REQ1
*
* 3rd party request here - implement later (must have key=0 and Sup).
*
REQ1     RACROUTE REQUEST=AUTH,ENTITY=((7)),                           +
               WORKA=((2)),MF=(E,RACLAB)
*
CONT     MVC   PRRET(4),SAFPRRET
         MVC   PRREA(4),SAFPRREA
         MVC   PSFRC(4),SAFPSFRC
         MVC   PSFRS(4),SAFPSFRS
         LA    R15,0
         B     EXIT
*----------------------------------------------------------------------
*  CONSTANTS
*
RACLA1 RACROUTE REQUEST=AUTH,CLASS='DATASET',STATUS=ACCESS,            X
               DSTYPE=M,RELEASE=1.9.2,MF=L
RACLEN   DC    A(*-RACLA1)
         LTORG
*----------------------------------------------------------------------
*  WORKAREA
*
WRK      DSECT
         DS    0D
SAVE     DS    18F
RACLAB RACROUTE REQUEST=AUTH,CLASS='DATASET',STATUS=ACCESS,            X
               DSTYPE=M,RELEASE=1.9.2,MF=L
WRKD     DS    512C
         DS    0D
*
WRKLEN   EQU   *-WRK
*
         EJECT
PARM     DSECT
         PAR0010
* Parameter format         Input:
*PUSER    DS     CL8         User ID
*PDSN     DS     CL44        DSNAME
*                          Output:
*PRRET    DS     F           RACF return code
*PRREA    DS     F           RACF reason code
*PSFRC    DS     F           SAF  return code
*PSFRS    DS     F           SAF  reason code
*
         PRINT NOGEN
         EJECT
         REGS
         EJECT
         ICHSAFP
         EJECT
         END
//*
//LKED    EXEC PGM=HEWLKED,PARM='NCAL,RENT,AC=1,RMOD=ANY,AMOD=31',
//        COND=(8,LE)
//SYSLMOD  DD DISP=SHR,DSN=SYS3.UTILITY.LOADLIB.TEST(SVM0010) <= *.LOAD
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//
//* Test this Program with RACFCHK
