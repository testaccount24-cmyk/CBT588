*=====================================================================*
*    $OPEN: Dynamic OPEN-READ-UPDATE-WRITE-CLOSE interface
*             (low level DYNALLOC/BSAM/BPAM)
*---------------------------------------------------------------------*
* FUNCTION:
*       1) Allocates & processes Dataset using DYNALLOC.
*       2) Read/write DASD datasets with DSORG=PO or PS.
*       3) PO and no MEMBER - reads PDS directory blocks.
*       4) Supports RECFM=F/FB/FBA/V/VB/VBA/U.
*
* PARM ($PARM DSECT):
*       R1=Addr of word containing Addr of the following
*       structure:                   > is input, < is output field:
*                 RC       DS F      <Return Code
*                 DSNAME   DS CL44   >Dataset Name
*                 MEMBER   DS CL8    >PDS Member Name/blanks
*                 VOLUME   DS CL6    >Volume Name/blanks
*                 RECLEN   DS H     ><Current Record Length
*                 DCBADDR  DS F      <DCB Address
*                 BUFADDR  DS F      <Buffer Address
*                 LENGTH   DS F     ><Data Length in Buffer (bytes)
*                 RECADDR  DS A      <Current Record Addr
*       This data block must be persistent in between calls.
*       Do not modify DCBADDR and BUFADDR.
*
* ENTRY POINTS:
*
* $OPENx Allocates and Opens the Data Set:
*       - If PDS and Member is blank - Open PDS Directory
*       - If DCBADDR=0, allocate DCB, BUFFER and SVMPAR6.
*       - If re-open other Member in same PDS BLDL+POINT used.
*       - If re-open same PS dataset, POINT used.
*       - If Other Dsn/Vol, $CLOSE is forced before $OPEN.
*       - If was WRITE, $CLOSE is forced before re-opening.
*       - If I/O error, then buffer contains SYNAD message.
*
*       $OPENx requires only DSNAME. VOLUME and MEMBERS are optional.
*       DSORG can be PS, PO, DA, RECFM - F(B), V(B), U.
*       Unset fields must be /blanks/zeros.
*       If DCBADDR<>0 then dataset considered open and should be closed
*       before you can re-use the parm block for another dataset.
*       You can change MEMBER without closing the dataset when reading
*       or updating.
*       If the member exists, after $OPEN buffer will contain
*       its directory entry (TTRZ in col 12-15)
*       You can re-open opened dataset, it will just reset pointer.
*       You can have as many PARM blocks as you need. Each
*       dataset will be allocated to a system-generated DDNAME
*       that can be accessed using DCBADDR.
*       Entry points:
*          $OPEN, - Allocate & Open the DataSet for Input.
*          $OPENI - Allocate & Open the DataSet for Input.
*          $OPENU - Allocate & Open the DataSet for Update.
*          $OPENW - Allocate & Open the DataSet for Output.
*                   When used for PDS, creates/replaces the MEMBER
*
* $CLOSE will close and unallocate dataset, remove DCB and BUFFER.
*       When a member was opened by $OPENW, it will be created
*       (STOW will be issued by $CLOSE). No other write operations will
*       be done by $CLOSE.
*       Addresses in the parm will be reset to zeros.
*
* $READ Read Block of Data to Buffer (dataset must be opened).
*       Set LENGTH to the the size of block read.
*       If RECFM is blocked, then set/reset RECLEN and RECADDR
*       to the next record within the block in buffer.
*       If PO and no MEMBER, read Dir Block (BLDL).
*       RECFM=U - block length put to RECLEN.
*
* $WRITE  UPDATE: Rewrite current block from Buffer.
*       - OUTPUT: Write block to dataset from Buffer.
*       - RECFM=FB: Caller program must maintain record
*         blocking. If Block length is different than
*         BLKSIZE, the block length must be placed to LENGTH.
*       - RECFM=U: the current block length must
*         be placed to RECLEN.
*
* RETURN CODES:
*       0 - OK
*       4 - Dynalloc failed
*      16 - OPEN error or no RAM available for buffer
*      24 - Invalid DSNAME
*      28 - MEMBER not found
****   32 - Read End Of File encountered
*      36 - DSORG that is not supported
*      40 - Read/Write I/O error (buffer has SYNAD error message)
*      44 - MEMBER specified for PS dataset
*      52 - READ called with DCBADDR=0
*      56 - READ called, but DCB is not opened
*      60 - No RAM available for workareas
*      64 - WRITE called with DCBADDR=0 or BUFADDR=0
*      68 - WRITE called, but DCB is not opened
*      72 - Re-OPEN PS dataset, but TTRZ is zero
*      76 - STOW failed for adding a new member
*
* ATTRIBUTES:
*               REENTRANT, AMODE=24.
* !             Caller might have AMODE=31, but must
* !             allocate SAVAREA and $PARM below 16M.
*---------------------------------------------------------------------
* Use in PL/I:
*               DECLARE $OPEN ENTRY RETURNS(BIT(1))
*               /* (RETURNed value '1'B is equivalent to RC=0) */
*   example:    DO WHILE($READ(RAPMPTR));
*                  Process record just read;
*                  END; /*EOF or error encountered */
*--------------------------------------------------------------------
* Use in Assembler:
*               1. LINK.
*               2. LOAD then CALL. (BASSM from above 16M)
*               3. Call as a EP Link Edited into the same module.
*               4. Examples of Use: A31ESD, IRXF@LPD, SVM0028
*
* Extenals:     SVMALC6 - DYNALLOC inteface
*--------------------------------------------------------------------
